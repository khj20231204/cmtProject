<!DOCTYPE html>
	<html xmlns:th="http://www.thymeleaf.org" 
	      xmlns:layout="http://www.ultraq.net.nz/thymeleaf/layout"
	      xmlns:sec="http://www.thymeleaf.org/extras/spring-security">
	<head>
		<link rel="stylesheet" href="https://uicdn.toast.com/tui.grid/latest/tui-grid.min.css">
		<script src="https://uicdn.toast.com/tui.grid/latest/tui-grid.min.js"></script>
		
		<link rel="stylesheet" href="https://uicdn.toast.com/tui.date-picker/latest/tui-date-picker.min.css">
		<script src="https://uicdn.toast.com/tui.date-picker/latest/tui-date-picker.min.js"></script>

		<link rel="stylesheet" href="https://uicdn.toast.com/tui.grid/latest/tui-grid.min.css">
		<script src="https://uicdn.toast.com/tui.grid/latest/tui-grid.min.js"></script>
	    <title>수주 등록</title>
    
    <title>Cmt</title>
	<style>
         body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f4;
            margin: 20px;
        }
        .container {
            background: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            max-width: 900px;
            margin: auto;
        }
        .form-group {
            display: flex;
            align-items: center;
            margin-bottom: 10px;
        }
        .form-group label {
            width: 120px;
            font-weight: bold;
        }
        .form-group input, .form-group select, .form-group textarea {
            flex: 1;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 5px;
        }
        .search-btn {
            background-color: #007bff;
            color: white;
            border: none;
            padding: 8px 12px;
            cursor: pointer;
            margin-left: 5px;
            border-radius: 5px;
        }
        .search-btn:hover {
            background-color: #0056b3;
        }
        .date-container {
            display: flex;
            align-items: center;
        }
        .date-container input {
            flex: 1;
        }
        .calendar-btn {
            background-color: #007bff;
            color: white;
            border: none;
            padding: 8px;
            cursor: pointer;
            margin-left: 5px;
            border-radius: 5px;
        }
		
		.custom-modal-size {
	        max-width: 900px; /* 원하는 너비로 설정 */
	        width: 90%; /* 반응형 적용 */
	    }
        
        .searchBtn { background:dodgerblue; color: white; }
	    .requestBtn { background: purple; color: white; }
	    .completeBtn { background: green; color: white; }
	    .cancelBtn { background: red; color: white; }
	    .excelBtn { background: darkblue; color: white; }
	    .helpBtn { background: orange; color: white; }
    </style>
</head>
<body>
	
    <div layout:fragment="content">
   		<div id="gridTop"></div>
    </div> <!-- layout:fragment="content" -->
   	
	<!-- 그리드 시작-->
    <script th:inline="javascript">
	
		
	document.addEventListener("DOMContentLoaded", function () {
		
		let grid;
		
		let soEditorSelected = /*[[${soEditorSelected}]]*/ [];
		let cltList = /*[[${cltList}]]*/ [];
		let empList = /*[[${empList}]]*/ [];
		let productList = /*[[${productList}]]*/ [];
		let soStatusList = /*[[${soStatusList}]]*/ [];
		
		let cltListSelected = cltList.map(item => ({lable: item.cltName, value: item.cltCode}));
		let empListSelected = empList.map(item => ({label: item.empName, value: item.empNo }));
		let productListSelected = productList.map(item => ({label: item.pdtName, value: item.pdtCode}))
		let soStatusListSelected = soStatusList.map(item => ({label: item.statusName, value: item.statusCode}))
		
		console.log(cltListSelected)
		console.log(empListSelected);
		console.log(productListSelected)
		console.log(soStatusListSelected);
		
		/*console.log(soEditorSelected);
		console.log(cltList);
		console.log(empList);
		console.log(productList);
		console.log(soStatusList);*/
		
        if (!grid) { // 중복 생성 방지
            grid = new tui.Grid({
                el: document.getElementById('gridTop'),
				data : soEditorSelected,
                scrollX: true,
                scrollY: true,
				width: 1300,  // 전체 너비 지정
				bodyHeight: 550, // 세로 스크롤을 위한 높이 지정
				columns: [
					{
						header: '수주번호',
						name: 'soNo',
						sortable: true, 
						filter: 'text',
						width: 100,
						align: 'center'
		            },
		            {
		                header: '수주코드',
		                name: 'soCode',
						sortable: true, 
						filter: 'text',
						width: 140,
						align: 'center' 
		            },
					{
		                header: '수주일자',
		                name: 'soDate',
						filter: 'text',
						width: 140,
						align: 'center',
						editor: {
						           type: 'datePicker',
						           options: {
						             format: 'yyyy-MM-dd',  // 날짜 포맷
						             language: 'ko'
						           }
						         }
		            },
		            {
		                header: '사원이름',
		                name: 'empNo',
						width: 150,
						align: 'center',
						editor: {
							type: 'select',
							options: {
								listItems: empListSelected
							}
						},
						formatter: ({ value }) => {
				            const match = empListSelected.find(opt => opt.value === value);
				            return match ? match.label : value;
				         }
		            },
		            {
		                header: '제품명',
		                name: 'pdtName',
						sortable: true, 
						filter: 'text',
						width: 150,
						align: 'center',
						editor: 'text'
						
		            },
					{
		                header: '거래처명',
		                name: 'cltName',
						sortable: true, 
						filter: 'text',
						width: 150,
						align: 'center',
						editor: 'text' 
		            },
		            {
		                header: '수량',
		                name: 'soQuantity',
						sortable: true, 
						filter: 'text',
						width: 40,
						align: 'center',
						editor: 'text'
		            },
		            {
		                header: '단가',
		                name: 'pdtShippingPrice',
						sortable: true, 
						filter: 'text',
						width: 80,
						align: 'center',
						editor: 'text'
		            },
					{
						header: '현재상태',
						name: 'statusName',
						sortable: true, 
						filter: 'text',
						width: 100,
						align: 'center',
						editor: 'text'
					}
                ],
				autoEdit: true,
				editingEvent: 'click' 
            });
			
			
        }//if (!grid) 

	}); //document.addEventListener("DOMContentLoaded", function () {
	
    </script>
	<!-- 그리드 끝-->
	
	<th:block layout:fragment="script">
		<script src="https://code.jquery.com/jquery.min.js"></script>
	    <script>
    	
	    </script>
	</th:block>
</body>

</html>


