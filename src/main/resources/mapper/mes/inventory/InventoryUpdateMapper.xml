<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.cmtProject.mapper.mes.inventory.InventoryUpdateMapper">
	
	
  <!-- 입고 검사 업데이트 쿼리 -->
  <update id="updateReceiptStatus" parameterType="String">
    UPDATE MATERIAL_RECEIPT mr
    SET mr.RECEIPT_STATUS = 
        CASE 
            WHEN EXISTS (
                SELECT 1 
                FROM IQC i 
                WHERE i.RECEIPT_CODE = mr.RECEIPT_CODE 
                AND i.IQC_INSPECTION_STATUS = '검사완료'
                AND i.IQC_INSPECTION_RESULT = '합격'
            ) THEN '검사합격'
            WHEN EXISTS (
                SELECT 1 
                FROM IQC i 
                WHERE i.RECEIPT_CODE = mr.RECEIPT_CODE 
                AND i.IQC_INSPECTION_STATUS = '검사완료'
                AND i.IQC_INSPECTION_RESULT = '불합격'
            ) THEN '검사불합격'
            ELSE mr.RECEIPT_STATUS
        END

    WHERE mr.RECEIPT_CODE = #{receiptCode}  <!-- no - > code 변경 -->

    AND EXISTS (
        SELECT 1 
        FROM IQC i 
        WHERE i.RECEIPT_CODE = mr.RECEIPT_CODE 
        AND i.IQC_INSPECTION_STATUS = '검사완료'
    )
  </update>
  
  <!-- 생산계획 업데이트 쿼리 -->
<!-- 판매주문 코드를 기반으로 자재 재고의 할당 수량을 다건 업데이트하는 쿼리 -->
<update id="updateAllocatedQtyWithMerge" parameterType="String">
  MERGE INTO MATERIAL_INVENTORY INVEN  <!-- 업데이트할 대상 테이블 (재고 테이블) -->
  USING (
    <!-- 소스 데이터를 가져오는 서브쿼리: BOM에서 필요한 자재와 수량 조회 -->
    SELECT  B.PARENT_PDT_CODE,  <!-- 자재 코드 -->
            B.BOM_QTY           <!-- 할당할 수량 -->
    FROM BOM B
    WHERE B.USE_YN = 'Y'        <!-- 사용중인 BOM 항목만 선택 -->
      AND B.PARENT_PDT_CODE LIKE 'MTL%'  <!-- 자재 코드로 시작하는 항목만 선택 -->
    <!-- 계층형 쿼리 시작: 판매 주문에서 제품 코드를 찾아 시작점으로 사용 -->
    START WITH B.CHILD_ITEM_CODE = (
        SELECT PDT_CODE
        FROM SALES_ORDER
        WHERE SO_CODE = #{soCode}  <!-- 파라미터로 받은 판매 주문 코드 -->
    )
    <!-- 계층 구조를 따라 부모 제품 코드와 자식 항목 코드를 연결하여 탐색 -->
    CONNECT BY PRIOR B.PARENT_PDT_CODE = B.CHILD_ITEM_CODE
  ) BOM  <!-- 서브쿼리 결과에 대한 별칭 -->
  ON (INVEN.MTL_CODE = BOM.PARENT_PDT_CODE)  <!-- 매칭 조건: 재고 테이블의 자재 코드와 BOM의 부모 제품 코드가 일치 -->
  
  <!-- 일치하는 레코드가 있을 경우 업데이트 실행 -->
  WHEN MATCHED THEN
    UPDATE SET 
      INVEN.ALLOCATED_QTY = TO_CHAR(BOM.BOM_QTY),  <!-- 할당 수량을 BOM_QTY 값으로 업데이트 (문자열로 변환) -->
      INVEN.UPDATED_BY = #{updatedBy},             <!-- 파라미터로 받은 업데이트 수행자 정보 -->
      INVEN.UPDATED_DATE = SYSDATE                 <!-- 업데이트 일시를 현재 시간으로 설정 -->
</update>
    
</mapper>